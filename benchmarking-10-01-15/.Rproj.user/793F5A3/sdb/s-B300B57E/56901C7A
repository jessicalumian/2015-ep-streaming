{
    "contents" : "# 10-01-15 Benchmarking project\n\n# Data from: literate resting eel pond protocol\n# https://github.com/dib-lab/literate-resting/blob/master/kp/eel-pond.rst\n\n# Gathered with sar in README, assimilated with extract.py from sartre\n# https://github.com/ctb/sartre\n\n\n# Install ggplot\ninstall.packages(\"ggplot2\")\nlibrary(\"ggplot2\")\n\ninstall.packages(\"gridExtra\")\nlibrary(\"gridExtra\")\n\n## EEL POND WITHOUT STREAMING\n\n\n# Load data\n## Space-separated (no header assumed)\nlog.data <- read.table(\"~/benchmarking/nonstreaming/log.out\") # with header\n\nhead(log.data)\n\n# TEMP - looking at each graph separately working code V1 = time V2 = CPU\ncpuplot <- ggplot(data=log.data, aes_string(x=\"V1\", y=\"V2\")) + \n  geom_line() + xlab(\"Time\")\nramplot <- ggplot(data=log.data.gb, aes_string(x=\"V1\", y=\"V2.1\")) + geom_line()\ndiskplot <- ggplot(data=log.data, aes_string(x=\"V1\", y=\"V4\")) + geom_line()\n\ncpuplot\nramplot\ndiscplot\n\n# Plot each graph (cpu, ram, disk) separately, \n# then use grid.arrange to stack\n\ncpuplot <- ggplot(data=log.data, aes_string(x=\"V1\", y=\"V2\")) + \n  geom_line(color = \"blue\") + xlab(\"\") + ylab(\"CPU load (100%)\") +\n  ggtitle(\"Eel Pond Without Streaming\") + theme(axis.text.x = \n  element_blank(), axis.text.y = element_text(size = 17, color = \"black\", \n  face = \"bold\"), plot.title = element_text(face = \"bold\", size = 20))\n  \n\nramplot <- ggplot(data=log.data, aes_string(x=\"V1\", y=\"V3\")) + \n  geom_line(color = \"red\") + xlab(\"\") + ylab(\"RAM (GB)\") +\n  theme(axis.text.x = element_blank(), axis.text.y = element_text(\n    angle = 45, size = 10, color = \"black\", face = \"bold\"))\n\ndiskplot <- ggplot(data=log.data, aes_string(x=\"V1\", y=\"V4\")) + \n  geom_line(color = \"green\") + xlab(\"Time (seconds)\") + ylab(\"Disk (kTPS)\") +\n  theme(axis.text.x = element_text(size = 20, color = \"black\", \n        face = \"bold\"), axis.text.y = element_text(size = 13.5, \n        color = \"black\", face = \"bold\"))\n\ngrid.arrange(cpuplot,ramplot,diskplot)\n\n\n\n## EEL POND WITH STREAMING\n\n# Load data\n## Space-separated (no header assumed)\nlog.data <- read.table(\"~/benchmarking/streaming/raw-ouput/10-10-15/log.out\") # with header\n\nhead(log.data)\n\n# Plot each graph (cpu, ram, disk) separately, \n# then use grid.arrange to stack\n\ncpuplot <- ggplot(data=log.data, aes_string(x=\"V1\", y=\"V2\")) + \n  geom_line(color = \"blue\") + xlab(\"\") + ylab(\"CPU load (100%)\") +\n  ggtitle(\"Eel Pond (1-2) With Streaming 10-10-15\") + theme(axis.text.x = \n  element_blank(), axis.text.y = element_text(size = 12, color = \"black\", \n  face = \"bold\"), plot.title = element_text(face = \"bold\", size = 20),\n  axis.title.y=element_text(vjust = 1))\n  \n\nramplot <- ggplot(data=log.data, aes_string(x=\"V1\", y=\"V3\")) + \n  geom_line(color = \"red\") + xlab(\"\") + ylab(\"RAM (GB)\") +\n  theme(axis.text.x = element_blank(), axis.text.y = element_text(\n    angle = 45, size = 7, color = \"black\", face = \"bold\"))\n\ndiskplot <- ggplot(data=log.data, aes_string(x=\"V1\", y=\"V4\")) + \n  geom_line(color = \"green\") + xlab(\"Time (seconds)\") + ylab(\"Disk (kTPS)\") +\n  theme(axis.text.x = element_text(size = 20, color = \"black\", \n    face = \"bold\"), axis.text.y = element_text(size = 13.5, \n    color = \"black\", face = \"bold\"))\n\ngrid.arrange(cpuplot,ramplot,diskplot)\n\n\n#### Ram Corrected Version #### - work in progress\n\n## EEL POND WITHOUT STREAMING - RAM CORRECTED\n\n\n# Load data\n## Space-separated (no header assumed)\nlog.data <- read.table(\"~/benchmarking/nonstreaming/log.out\") # with header\n\nhead(log.data)\n\ncol3 <- log.data$V3/(10^9)\n\n# Divide RAM (column V3) by e9 to get in GB -- this part doesn't work\nlog.data.gb <- data.frame(log.data[c(1,2,col3,4,5,6,7,8)])\nlog.data.gb <- data.frame(log.data[c(1,2,3,4,5,6,7,8)])\n\nhead(log.data.gb)\n\n# try a for loop out of desperation (which also doesn't work)\nfor (i in log.data$V3) {\n  log.data.gb[i] <- log.data$V3/(10^9)\n}\n\n\n# Plot each graph (cpu, ram, disk) separately, \n# then use grid.arrange to stack\n\ncpuplot <- ggplot(data=log.data.gb, aes_string(x=\"V1\", y=\"V2\")) + \n  geom_line(color = \"blue\") + xlab(\"\") + ylab(\"CPU load (100%)\") +\n  ggtitle(\"Eel Pond Without Streaming\") + theme(axis.text.x = \n  element_blank(), axis.text.y = element_text(size = 12, color = \"black\", \n    face = \"bold\"), plot.title = element_text(face = \"bold\", size = 20))\n\nramplot <- ggplot(data=log.data.gb, aes_string(x=\"V1\", y=\"V2.1\")) + \n  geom_line(color = \"red\") + xlab(\"\") + ylab(\"RAM (GB)\") +\n  theme(axis.text.x = element_blank(), axis.text.y = element_text(\n     size = 12, color = \"black\", face = \"bold\"))\n\ndiskplot <- ggplot(data=log.data.gb, aes_string(x=\"V1\", y=\"V4\")) + \n  geom_line(color = \"green\") + xlab(\"Time (seconds)\") + ylab(\"Disk (kTPS)\") +\n  theme(axis.text.x = element_text(size = 20, color = \"black\", \n    face = \"bold\"), axis.text.y = element_text(size = 11, \n    color = \"black\", face = \"bold\"))\n\ngrid.arrange(cpuplot,ramplot,diskplot)\n\n\n\n## EEL POND WITH STREAMING\n\n# Load data\n## Space-separated (no header assumed)\nlog.data <- read.table(\"~/benchmarking/streaming/log.out\") # with header\n\nhead(log.data)\n\n# Divide RAM (column V3) by e9 to get in GB \nlog.data.gb <- data.frame(log.data[c(1,2,3/10*9,4,5,6,7,8)])\n\nhead(log.data.gb)\n\n# Plot each graph (cpu, ram, disk) separately, \n# then use grid.arrange to stack\n\ncpuplot <- ggplot(data=log.data.gb, aes_string(x=\"V1\", y=\"V2\")) + \n  geom_line(color = \"blue\") + xlab(\"\") + ylab(\"CPU load (100%)\") +\n  ggtitle(\"Eel Pond With Streaming\") + theme(axis.text.x = \n  element_blank(), axis.text.y = element_text(size = 14, color = \"black\", \n    face = \"bold\"), plot.title = element_text(face = \"bold\", size = 20))\n\nramplot <- ggplot(data=log.data.gb, aes_string(x=\"V1\", y=\"V2.1\")) + \n  geom_line(color = \"red\") + xlab(\"\") + ylab(\"RAM (GB)\") +\n  theme(axis.text.x = element_blank(), axis.text.y = element_text(\n    size = 13, color = \"black\", face = \"bold\"))\n\ndiskplot <- ggplot(data=log.data.gb, aes_string(x=\"V1\", y=\"V4\")) + \n  geom_line(color = \"green\") + xlab(\"Time (seconds)\") + ylab(\"Disk (kTPS)\") +\n  theme(axis.text.x = element_text(size = 20, color = \"black\", \n    face = \"bold\"), axis.text.y = element_text(size = 8, \n    color = \"black\", face = \"bold\"))\n\ngrid.arrange(cpuplot,ramplot,diskplot)\n\n\n\n\n",
    "created" : 1443743859387.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2977153452",
    "id" : "56901C7A",
    "lastKnownWriteTime" : 1444424039,
    "path" : "~/benchmarking/benchmarking-10-01-15/plots.R",
    "project_path" : "plots.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}